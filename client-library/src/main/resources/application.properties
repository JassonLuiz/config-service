spring.application.name=client-library
server.port=8085

config.api.username=admin
config.api.password=admin123

# Configuração da aplicação
config.namespace=my-app
config.environment=dev
config.kafka.topics=config.my-app.dev
config.api.base-url=http://localhost:8080

# Redis
spring.redis.host=localhost
spring.redis.port=6379

# Kafka Consumer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest

# Deserializadores com tratamento de erro
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Permite pacotes confiáveis
spring.kafka.consumer.properties.spring.json.trusted.packages=io.github.clientlibrary.client_library.event

# Força o tipo do payload no consumidor
spring.kafka.consumer.properties.spring.json.value.default.type=io.github.clientlibrary.client_library.event.ConfigChangedEvent

logging.level.io.github.clientlibrary.client_library.service.ConfigSyncService=DEBUG

